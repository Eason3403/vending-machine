以Mooc浙江大学翁恺《C语言程序设计》为基础的学习文档
一、计算
1、变量定义：变量类型+变量名称，空格连接
2、变量赋值：通过“=”实现，将等号右边的值赋给等号左边的变量
3、变量输入输出：
①scanf("%代表变量类型的字母"，&变量名称）
   printf("%代表变量类型的字母"，变量名称）
常见——int %d %d   /  float %f %f   /    double %lf %.nf(输出到n位小数）   /   char %c %c   /   str[] %s %s
②gerchar()，用于读取一个字符
/*在循环中的scanf若首位读入的是字符或字符串，会将上一次输入的回车当作字符或字符串读入导致程序错误，这时可以使用getchar()将回车读走
: (第一次遇到这个问题的时候被卡了好久*/
③更多的尚未熟练使用，仍以scanf为主
4、运算符及优先级：+ -（表示单目不变或取负）>* / % >+ -（表示加减）> =
//单目不变、单目取负、赋值的结合关系为自右向左
5、特殊的赋值：
①复合赋值 total+=n与total=total+n等价，其余加减乘除同理
②递增递减 total++与total=total+1等价，减同理
二、判断
1、if-else判断（为节省行数省略回车） if（条件）{满足条件则执行的内容}else{不满足条件则执行的内容}
可在其中使用else if级联多轮判断
//if、else、else if后也可省略大括号但仅能跟一个有效语句
2、switch-case判断  switch(变量名）{case 1:当变量值为1时执行的内容……case n:……}
//if-else判断更适合相对对立、少量条件之间的判断，而switch-case判断则更适合相对并列、大量条件之间的判断
3、关系运算：”==“相等、”！=“不相等、”>=“大于或等于,etc.
三、循环（结合下一章循环控制）
1、while、do-while循环：判断并选择是否进入循环节，不同点在于do-while循环会先执行一次循环节再进行判断是否继续循环
//需在循环节中设置有关条件的变量的改变，以达结束循环的目的
2、for循环：三要素—初始状态、循环条件、执行内容（有关循环结束的变量）
//更简洁且循环的逻辑条件更清晰，但仅适用于循环次数相对已知的情况
3、循环控制：①break 中断循环 ②continue 中断循环节，但循环仍继续
/*break仅能跳出所在的循环，对于嵌套的循环想要全部停止，须在每层循环都加上条件及break
由于条件中关系运算的结果实质为0和1，while(1)可以表示一直循环，而在while(1)循环中添加关于用户输入的判断以及break可以增加程序循环的可控性*/
四、数据类型
1、C语言基础数据类型：整数（char、short、int、long、long long）、浮点数（float、double、long double）、逻辑（bool）、指针、*自定义 
2、逃逸字符：\b  回退一格、\n 换行、\r  回车、\"  双引号、\'  单引号、\\  反斜杠
五、函数
函数的定义、返回和调用：void（不返回）/返回的变量类型+函数名(无或函数中要用的参数){函数执行内容+return 需要返回的变量名}
调用时的指令与函数定义头行相同
//可简化输入不同但执行内容相同的代码，降低代码维护压力
需在main之前就定义好函数，或使用头行声明再补充定义


gcc学习
编译目的是将.c等程序文件转为.exe的可运行文件，在gcc中实现分为四步
1、预处理  gcc -E test.c（需要编译的文件）-o test.i（指定输出文件）
实际执行内容：
①处理头文件，将被包含的文件插入到预编译指令的位置
②处理含有条件的预编译指令（if  else  等）
③展开define的宏定义并删除注释
④删除行号和文件标识
2、编译  gcc -S test.i（自动识别生成.s文件）
实际执行内容：进行词法、语法、语义分析，进行一定优化，翻译为文本文件.s
3、汇编  gcc -c test.s（结果生成.o二进制文件）
实际执行内容：将.s翻译为.o的二进制文件，使贴合电脑可读懂的机器语言指令
4、链接  gcc -o test.o
实际执行内容：将程序中调用的函数、命令等所在的目标文件连接到.o中生成可执行文件